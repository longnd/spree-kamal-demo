# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.

# Option 1: Read secrets from the environment
# KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD

# Option 2: Read secrets via a command
# RAILS_MASTER_KEY=$(cat config/master.key)

# Option 3: Read secrets via kamal secrets helpers
# These will handle logging in and fetching the secrets in as few calls as possible
# There are adapters for 1Password, LastPass + Bitwarden
#
# SECRETS=$(kamal secrets fetch --adapter 1password --account my-account --from MyVault/MyItem KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
# KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD $SECRETS)
# RAILS_MASTER_KEY=$(kamal secrets extract RAILS_MASTER_KEY $SECRETS)

# Fetch secrets from 1Password
SECRETS=$(kamal secrets fetch --adapter 1password --account nguyenduclong@msn.com --from SaigonRB/kamal-demo-spree DB_USER DB_PASSWORD DB_NAME QUEUE_DB_NAME KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD ${SECRETS})
POSTGRES_USER=$(kamal secrets extract DB_USER ${SECRETS})
POSTGRES_PASSWORD=$(kamal secrets extract DB_PASSWORD ${SECRETS})
POSTGRES_DB=$(kamal secrets extract DB_NAME ${SECRETS})
QUEUE_DB_NAME=$(kamal secrets extract QUEUE_DB_NAME ${SECRETS})
RAILS_MASTER_KEY=$(kamal secrets extract RAILS_MASTER_KEY ${SECRETS})

# Construct database URLs from extracted secrets
# ... existing code ...

# Construct database URLs from extracted secrets - with URL encoding
DATABASE_URL=$(printf "postgres://%s:%s@128.199.236.181:5432/%s" "${POSTGRES_USER}" "${POSTGRES_PASSWORD}" "${POSTGRES_DB}")
QUEUE_DATABASE_URL=$(printf "postgres://%s:%s@128.199.236.181:5432/%s" "${POSTGRES_USER}" "${POSTGRES_PASSWORD}" "${QUEUE_DB_NAME}")
